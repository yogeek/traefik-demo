# Traefik demo for docker swarm mode
#
# Launch with :
#   docker deploy -c docker-stack.yml demo
#
# Traefik Dashboard is avaibale at :
#   http://<IP_NODE>:8080
#
#
# Services will be accessible at :
#
#   - whoami1 => curl -H host:whoami.traefik http://<ANY_NODE_IP>/whoami1
#   - whoami2 => curl -H host:whoami.traefik http://<ANY_NODE_IP>/whoami2
# 
# Load Balancing with scaling :
# 
#   docker service scale whoami1=3
#   docker service scale whoami2=5
#
#   - whoami1 => curl -H host:whoami.traefik http://<ANY_NODE_IP>/whoami1
#   - whoami2 => curl -H host:whoami.traefik http://<ANY_NODE_IP>/whoami2
# 


version: '3'

services:
  traefik:
    image: traefik
    container_name: traefik
    ports:
     - "80:80"
     - "8080:8080"
    volumes: 
     - /var/run/docker.sock:/var/run/docker.sock
    command: traefik --docker --docker.swarmmode --docker.domain=traefik --docker.watch --web --logLevel=DEBUG
    networks:
      - traefik-net
    deploy:
      placement:
        constraints:
          - node.role == manager

  whoami1:
    image: emilevauge/whoami
    networks:
      - traefik-net
    deploy:
      labels:
        - "traefik.port=80"
        - "traefik.backend=whoami1"
        - "traefik.docker.network=traefik_traefik-net"
        - "traefik.frontend.rule=Host:whoami.traefik; PathPrefixStrip: /whoami1"

  whoami2:
    image: emilevauge/whoami
    networks:
      - traefik-net
    deploy:
      labels:
        - "traefik.port=80"
        - "traefik.backend=whoami2"
        - "traefik.docker.network=traefik_traefik-net"
        - "traefik.frontend.rule=Host:whoami.traefik; PathPrefixStrip: /whoami2"

networks:
  traefik-net:
    driver: overlay
